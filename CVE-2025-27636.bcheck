metadata:
    language: v2-beta
    name: "Camel Message Header Injection  Multi"
    description: "Tests for the ability to inject a variety of Camel message header"
    author: "Mark Thorson"
    tags: "Camel", "Inejction","CVE-2025-27636","CVE-2025-29891"

define:
    issueDetail = `The application appears to be vulnerable to Apache Camel message header injection.`
    issueRemediation = "Upgrade Apcahe Camel to version 4.10.3"
    allheaders = "?CAmelSqlQuery=TEST&CamElBeanMethodName=doesnotexist8892"
    httpCollabUri = `https://{generate_collaborator_address()}/httpUri`
    stringTempUri = `https://{generate_collaborator_address()}/strTemp`
    workdayUri = `https://{generate_collaborator_address()}/workday`
    xsltUri = `https://{generate_collaborator_address()}/xslt`
    xmlUri = `https://{generate_collaborator_address()}/xmlSig`
    torchUri = `https://{generate_collaborator_address()}/torch`

given request then
    send request called camelcheck:
        appending queries:
            "CAmelSqlQuery=TEST", #Incorrect Query should respone with 500 vs 200
            "CAmelBeanMethodName=doesntexist", #Nonexixtent method name should respond with 500 vs 200
            "CAmelExecCommandExecutable=notarealcommand", #Nonexixtent command should respond with 500 vs 200
            "CAmelHttpResponseCode=451", # Will respond with a 451 HTTP response code if vulnerable
            "CAmelSqlStoredTemplate=tests(*)",  # Will likely respond with a 500 type error. If you put a valid built in SQL function like CURRENT_TIME() you should get a 200
            `CAmelStringTemplateResourceUri={stringTempUri}`,
            `CamelHttpUri={httpCollabUri}`,
            `CAmelWorkdayURL={workdayUri}`,
            `CAmelXsltResourceUri={xsltUri}`,
            `CAmelXmlSignatureSchemaResourceUri={xmlUri}`,
            `CAmelTorchServeUrl={torchUri}`
            
        replacing headers: 
            "CAmelSqlQuery":"TEST",
            "CAmelBeanMethodName":"doesntexist",
            "CAmelExecCommandExecutable":"notarealcommand",
            "CAmelHttpResponseCode":"451"

    if ({camelcheck.response.status_code} is "500") or (`Method with name: doesntexist` in {camelcheck.response.body} or ("org.apache.camel" in {camelcheck.response.body})) then
        # 500 errors could indicate header injection
        report issue:
            severity: high
            confidence: tentative
            detail: {issueDetail}
            remediation: {issueRemediation}
    else if({camelcheck.response.status_code} is "451") then
        # Unlikely that app would respond with 451 response
        report issue:
            severity: high
            confidence: certain
            detail: `{issueDetail}. The application is processing the CamelHttpResponse code header`
            remediation: {issueRemediation}
    else if (http interactions) or (dns interactions) then
        # Firm confidence if 
        report issue:
            severity: high
            confidence: firm
            detail: `{issueDetail}.`
            remediation: {issueRemediation}
    end if
